---
# Main playbook for Laravel 11 environment setup
# This playbook installs all prerequisites for Laravel 11 with support for application-specific variables

- name: Deploy Laravel 11 Environment
  hosts: all
  become: true
  
  # Pre-tasks to validate and load application-specific variables
  pre_tasks:
    - name: Validate required variables for application-specific deployment
      ansible.builtin.fail:
        msg: |
          ❌ Application-specific deployment requires the 'app_name' variable to be defined.
          
          Usage examples:
          ansible-playbook -i inventory/hosts.yml site.yml -e "app_name=neodatabase"
          ansible-playbook -i inventory/hosts.yml site.yml --extra-vars "app_name=myproject"
          
          This will automatically load variables from: vars/{{ app_name | default('UNDEFINED') }}.yml
      when: 
        - app_name is not defined
        - application_mode | default(false) | bool

    - name: Check if application-specific variable file exists
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/vars/{{ app_name }}.yml"
      register: app_vars_file
      delegate_to: localhost
      run_once: true
      when: app_name is defined

    - name: Validate application variable file exists
      ansible.builtin.fail:
        msg: |
          ❌ Application variable file not found: vars/{{ app_name }}.yml
          
          Please create the file vars/{{ app_name }}.yml with your application-specific variables.
          You can use vars/example-app.yml as a template.
      when: 
        - app_name is defined
        - not app_vars_file.stat.exists

    - name: Load application-specific variables
      ansible.builtin.include_vars: "{{ playbook_dir }}/vars/{{ app_name }}.yml"
      when: 
        - app_name is defined
        - app_vars_file.stat.exists

    - name: Load default version mappings
      ansible.builtin.include_vars: "{{ playbook_dir }}/vars/versions.yml"

    - name: Display deployment information
      ansible.builtin.debug:
        msg: |
          🚀 Starting Laravel {{ laravel_version | default('11') }} environment deployment
          📊 Target: {{ inventory_hostname }}
          📱 Application: {{ app_name | default('Generic Laravel') }}
          🗃️ Database: {{ db_engine | default('mysql') }}
          🌐 Webserver: {{ webserver_type | default('nginx') }}
          📦 Redis: {{ enable_redis | default(false) | ternary('enabled', 'disabled') }}
          📂 App Root: {{ webserver_laravel_root | default('/var/www/laravel') }}
      tags: [always]

    - name: Update package cache
      ansible.builtin.package:
        update_cache: true
      when: update_cache | default(true) | bool
      tags: [always]
      
    - name: Install essential system packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - git
        - unzip
        - zip
        - acl
        - python3-pip
        - python3-setuptools
        - ca-certificates
        - gnupg
        - lsb-release
      tags: [common, system]
      
    - name: Install Python dependencies for Ansible modules (Debian/Ubuntu)
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - python3-pymysql
        - python3-psycopg2
      when: ansible_os_family == "Debian"
      tags: [common, python]

    - name: Install Python dependencies for Ansible modules (RHEL/CentOS)
      ansible.builtin.pip:
        name: "{{ item }}"
        state: present
      loop:
        - PyMySQL
        - psycopg2-binary
      when: ansible_os_family == "RedHat"
      ignore_errors: true
      tags: [common, python]

    - name: Verify Laravel version compatibility
      ansible.builtin.assert:
        that:
          - laravel_version | default('11') in laravel_versions
        fail_msg: "Laravel version {{ laravel_version | default('11') }} is not supported. Available: {{ laravel_versions.keys() | list }}"
        success_msg: "✅ Laravel {{ laravel_version | default('11') }} is supported"
      tags: [always]

    - name: Validate application-specific variables (if application mode)
      ansible.builtin.assert:
        that:
          - webserver_server_name is defined
          - webserver_laravel_root is defined
          - app_repo_url is defined or skip_app_deployment | default(false) | bool
        fail_msg: |
          ❌ Required application variables missing in vars/{{ app_name }}.yml:
          - webserver_server_name: Domain name for the application
          - webserver_laravel_root: Path where the application will be installed
          - app_repo_url: Git repository URL (unless skip_app_deployment: true)
        success_msg: "✅ Application-specific variables validated"
      when: app_name is defined
      tags: [always]
  
  roles:
    # Core PHP stack
    - role: php
      tags: [php, core]
      when: true
    
    - role: composer
      tags: [composer, core]
      when: true
    
    # Frontend tools
    - role: nodejs
      tags: [nodejs, frontend]
      when: true
    
    # Database engines (conditional)
    - role: mysql
      tags: [database, mysql]
      when: db_engine | default('mysql') == 'mysql'
    
    - role: mariadb
      tags: [database, mariadb]
      when: db_engine | default('mysql') == 'mariadb'
    
    - role: postgresql
      tags: [database, postgresql]
      when: db_engine | default('mysql') == 'postgresql'
    
    # Caching (optional)
    - role: redis
      tags: [redis, cache]
      when: enable_redis | default(false) | bool
    
    # Web server (last to ensure proper integration)
    - role: webserver
      tags: [webserver, nginx, apache]
      when: true
  
  post_tasks:
    - name: Ensure Laravel directories exist with correct permissions
      ansible.builtin.file:
        path: "{{ webserver_laravel_root }}/{{ item }}"
        state: directory
        owner: "{{ webserver_user }}"
        group: "{{ webserver_group }}"
        mode: '0775'
      loop:
        - "storage"
        - "storage/app"
        - "storage/app/public"
        - "storage/framework"
        - "storage/framework/cache"
        - "storage/framework/sessions"
        - "storage/framework/views"
        - "storage/logs"
        - "bootstrap/cache"
      when: 
        - webserver_laravel_root is defined 
        - webserver_laravel_root != ''
      tags: [permissions, laravel]

    - name: Create phpinfo test file (development only)
      ansible.builtin.copy:
        content: |
          <?php
          echo "<h1>{{ app_name | default('Laravel') }} Environment Ready!</h1>";
          echo "<h2>Application Details</h2>";
          echo "<p><strong>Application:</strong> {{ app_name | default('Unknown') }}</p>";
          echo "<p><strong>Environment:</strong> {{ laravel_app_env | default('production') }}</p>";
          echo "<p><strong>Laravel Version:</strong> {{ laravel_version | default('11') }}</p>";
          echo "<p><strong>Database Engine:</strong> {{ db_engine | default('mysql') }}</p>";
          echo "<h2>PHP Information</h2>";
          phpinfo();
        dest: "{{ webserver_laravel_root }}/public/phpinfo.php"
        owner: "{{ webserver_user }}"
        group: "{{ webserver_group }}"
        mode: '0644'
      when: 
        - webserver_laravel_root is defined 
        - webserver_laravel_root != ''
        - laravel_app_env | default('production') != 'production'
      tags: [development, testing]

    - name: Verify PHP-FPM socket exists
      ansible.builtin.stat:
        path: "{{ webserver_php_fpm_socket | regex_replace('unix:', '') }}"
      register: php_fpm_socket_check
      when: webserver_type | default('nginx') == 'nginx'
      tags: [verification]

    - name: Display Laravel environment setup summary
      ansible.builtin.debug:
        msg: |
          
          🎉 Laravel {{ laravel_version | default('11') }} environment setup completed successfully!
          
          📱 Application Information:
          ├── Application Name: {{ app_name | default('Generic Laravel Setup') }}
          ├── Environment: {{ laravel_app_env | default('production') }}
          ├── Domain: {{ webserver_server_name | default('localhost') }}
          └── Install Path: {{ webserver_laravel_root | default('/var/www/laravel') }}
          
          📋 Installed Components:
          ├── PHP {{ php_version | default('8.2') }} ✅
          ├── Composer {{ composer_version | default('latest') }} ✅
          ├── Node.js {{ nodejs_version | default('20.x') }} ✅
          {% if db_engine | default('mysql') == 'mysql' %}
          ├── MySQL {{ mysql_version | default('8.0') }} ✅
          │   ├── Database: {{ mysql_db_name | default('laravel') }}
          │   └── User: {{ mysql_db_user | default('laravel') }}
          {% elif db_engine | default('mysql') == 'mariadb' %}
          ├── MariaDB {{ mariadb_version | default('10.11') }} ✅
          │   ├── Database: {{ mariadb_db_name | default('laravel') }}
          │   └── User: {{ mariadb_db_user | default('laravel') }}
          {% elif db_engine | default('mysql') == 'postgresql' %}
          ├── PostgreSQL {{ postgresql_version | default('15') }} ✅
          │   ├── Database: {{ postgresql_db_name | default('laravel') }}
          │   └── User: {{ postgresql_db_user | default('laravel') }}
          {% endif %}
          {% if enable_redis | default(false) | bool %}
          ├── Redis {{ redis_version | default('7.0') }} ✅
          {% endif %}
          └── {{ webserver_type | default('nginx') | capitalize }} web server ✅
          
          🌐 Web Configuration:
          ├── Server name: {{ webserver_server_name | default('localhost') }}
          ├── Document root: {{ webserver_public_root | default(webserver_laravel_root + '/public') }}
          {% if webserver_enable_ssl | default(false) %}
          ├── SSL/TLS: Enabled ✅
          {% else %}
          ├── SSL/TLS: Disabled ⚠️
          {% endif %}
          └── PHP-FPM: {{ php_fpm_socket_check.stat.exists | default(false) | ternary('Connected ✅', 'Check configuration ⚠️') }}
          
          🚀 Next Steps:
          {% if app_name is defined and not (skip_app_deployment | default(false) | bool) %}
          1. Deploy your application: ansible-playbook -i inventory/hosts.yml deploy-laravel.yml -e "app_name={{ app_name }}"
          2. Configure your .env file with database credentials
          3. Run Laravel setup commands (migrations, cache, etc.)
          {% else %}
          1. Deploy your Laravel application to: {{ webserver_laravel_root | default('/var/www/laravel') }}
          2. Configure your .env file with database credentials
          3. Run Laravel setup commands (migrations, cache, etc.)
          {% endif %}
          {% if laravel_app_env | default('production') != 'production' %}
          4. Test PHP configuration: http://{{ webserver_server_name | default('localhost') }}/phpinfo.php
          {% endif %}
          
          📚 Application-specific variables loaded from: vars/{{ app_name | default('N/A') }}.yml
      tags: [always]

    - name: Save deployment information to file
      ansible.builtin.copy:
        content: |
          # Laravel {{ laravel_version | default('11') }} Environment - Deployment Info
          # Generated on {{ ansible_date_time.iso8601 }}
          
          ## Application Information
          - Application Name: {{ app_name | default('Generic Laravel Setup') }}
          - Environment: {{ laravel_app_env | default('production') }}
          - Variables File: vars/{{ app_name | default('N/A') }}.yml
          
          ## System Information
          - Server: {{ inventory_hostname }}
          - OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
          - Architecture: {{ ansible_architecture }}
          
          ## Installed Components
          - PHP: {{ php_version | default('8.2') }}
          - Composer: {{ composer_version | default('latest') }}
          - Node.js: {{ nodejs_version | default('20.x') }}
          - Database: {{ db_engine | default('mysql') }} {{ laravel_versions[laravel_version | default('11')].databases[db_engine | default('mysql')].version }}
          {% if enable_redis | default(false) | bool %}
          - Redis: {{ redis_version | default('7.0') }}
          {% endif %}
          - Webserver: {{ webserver_type | default('nginx') }}
          
          ## Configuration
          - Laravel root: {{ webserver_laravel_root | default('/var/www/laravel') }}
          - Server name: {{ webserver_server_name | default('localhost') }}
          - PHP-FPM socket: {{ webserver_php_fpm_socket | default('unix:/var/run/php/php8.2-fpm.sock') }}
          
          ## Database Configuration
          {% if db_engine | default('mysql') == 'mysql' %}
          - MySQL Database: {{ mysql_db_name | default('laravel') }}
          - MySQL User: {{ mysql_db_user | default('laravel') }}
          - MySQL Port: {{ mysql_port | default(3306) }}
          {% elif db_engine | default('mysql') == 'mariadb' %}
          - MariaDB Database: {{ mariadb_db_name | default('laravel') }}
          - MariaDB User: {{ mariadb_db_user | default('laravel') }}
          - MariaDB Port: {{ mariadb_port | default(3306) }}
          {% elif db_engine | default('mysql') == 'postgresql' %}
          - PostgreSQL Database: {{ postgresql_db_name | default('laravel') }}
          - PostgreSQL User: {{ postgresql_db_user | default('laravel') }}
          - PostgreSQL Port: {{ postgresql_port | default(5432) }}
          {% endif %}
          
          {% if app_name is defined %}
          ## Application Repository
          - Repository URL: {{ app_repo_url | default('Not specified') }}
          - Branch: {{ app_repo_branch | default('main') }}
          {% endif %}
        dest: "/root/laravel-deployment-info-{{ app_name | default('generic') }}.md"
        mode: '0600'
      tags: [documentation]

  handlers:
    - name: Restart all services
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
      loop:
        - "{{ php_fpm_service | default('php8.2-fpm') }}"
        - "{{ webserver_type | default('nginx') == 'nginx' | ternary(nginx_service | default('nginx'), apache_service | default('apache2')) }}"
      listen: "restart services"