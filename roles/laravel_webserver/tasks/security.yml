---
# roles/laravel_webserver/tasks/security.yml
# Security configuration tasks for Laravel webserver

- name: (security) Create security configuration snippet for NGINX
  ansible.builtin.template:
    src: nginx/security.conf.j2
    dest: "/etc/nginx/conf.d/{{ app_name }}-security.conf"
    owner: root
    group: root
    mode: '0644'
    backup: "{{ laravel_webserver_backup_config | default(true) | bool }}"
  when: webserver_type | default('nginx') == 'nginx'
  notify: Reload NGINX
  tags: [security, nginx]

- name: (security) Create security configuration snippet for Apache
  ansible.builtin.template:
    src: apache/security.conf.j2
    dest: "{{ apache_vhost_dir }}/{{ app_name }}-security.conf"
    owner: root
    group: root
    mode: '0644'
    backup: "{{ laravel_webserver_backup_config | default(true) | bool }}"
  when: webserver_type | default('nginx') == 'apache'
  notify: Reload Apache
  tags: [security, apache]

- name: (security) Set up fail2ban jail for application (if fail2ban is installed)
  ansible.builtin.template:
    src: fail2ban/laravel-app.conf.j2
    dest: "/etc/fail2ban/jail.d/{{ app_name }}.conf"
    owner: root
    group: root
    mode: '0644'
  when: 
    - laravel_webserver_fail2ban | default(false) | bool
    - ansible_facts.services['fail2ban.service'] is defined
  notify: Restart Fail2Ban
  tags: [security, fail2ban]

- name: (security) Create robots.txt for application
  ansible.builtin.template:
    src: robots.txt.j2
    dest: "{{ webserver_public_root }}/robots.txt"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0644'
  when: laravel_webserver_robots_txt | default(false) | bool
  tags: [security, robots]

- name: (security) Set up security headers test endpoint
  ansible.builtin.copy:
    content: |
      <?php
      // Security headers test endpoint for {{ app_name }}
      // Generated by Ansible on {{ ansible_date_time.iso8601 }}
      
      header('Content-Type: application/json');
      
      $headers = array_filter($_SERVER, function($key) {
          return strpos($key, 'HTTP_') === 0;
      }, ARRAY_FILTER_USE_KEY);
      
      $security_headers = [
          'X-Frame-Options' => $_SERVER['HTTP_X_FRAME_OPTIONS'] ?? 'Not set',
          'X-Content-Type-Options' => $_SERVER['HTTP_X_CONTENT_TYPE_OPTIONS'] ?? 'Not set',
          'X-XSS-Protection' => $_SERVER['HTTP_X_XSS_PROTECTION'] ?? 'Not set',
          'Strict-Transport-Security' => $_SERVER['HTTP_STRICT_TRANSPORT_SECURITY'] ?? 'Not set',
          'Content-Security-Policy' => $_SERVER['HTTP_CONTENT_SECURITY_POLICY'] ?? 'Not set',
          'Referrer-Policy' => $_SERVER['HTTP_REFERRER_POLICY'] ?? 'Not set'
      ];
      
      echo json_encode([
          'application' => '{{ app_name }}',
          'timestamp' => date('c'),
          'security_headers' => $security_headers,
          'ssl_enabled' => isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on'
      ], JSON_PRETTY_PRINT);
    dest: "{{ webserver_public_root }}/security-test.php"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0644'
  when: 
    - laravel_webserver_security_test | default(false) | bool
    - laravel_app_env != 'production'
  tags: [security, testing]

- name: (security) Display security configuration summary
  ansible.builtin.debug:
    msg: |
      🔒 Security Configuration Applied for {{ app_name }}:
      
      ✅ Security Features:
      ├── Security Headers: {{ laravel_webserver_security | default(true) | ternary('✅ Enabled', '⚠️ Disabled') }}
      ├── Protected Directories: {{ laravel_webserver_protected_dirs | default([]) | length }} directories protected
      ├── SSL/HTTPS: {{ webserver_enable_ssl | default(false) | ternary('✅ Enabled', '⚠️ HTTP only') }}
      {% if laravel_webserver_fail2ban | default(false) | bool %}
      ├── Fail2Ban: {{ ansible_facts.services['fail2ban.service'] is defined | ternary('✅ Configured', '⚠️ Service not found') }}
      {% endif %}
      {% if laravel_webserver_security_test | default(false) | bool and laravel_app_env != 'production' %}
      ├── Security Test: ✅ Available at {{ laravel_app_url }}/security-test.php
      {% endif %}
      └── Rate Limiting: {{ laravel_webserver_rate_limiting | default(false) | ternary('✅ Enabled (' + laravel_webserver_rate_limit | default('10r/s') + ')', '⚠️ Disabled') }}
      
      🛡️ Protected Directories:
      {% for dir in laravel_webserver_protected_dirs | default([]) %}
      - /{{ dir }}
      {% endfor %}
      
      {% if webserver_enable_ssl | default(false) | bool %}
      🔐 SSL Security:
      ├── Protocols: {{ laravel_webserver_ssl_protocols | default('TLSv1.2 TLSv1.3') }}
      ├── HSTS Max-Age: {{ laravel_webserver_hsts_max_age | default('31536000') }} seconds
      └── HSTS Subdomains: {{ laravel_webserver_hsts_include_subdomains | default(true) | ternary('Included', 'Excluded') }}
      {% endif %}
  tags: [security, summary]