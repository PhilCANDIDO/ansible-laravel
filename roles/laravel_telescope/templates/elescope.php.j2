<?php
// Laravel Telescope Configuration
// Generated by Ansible - Customize as needed

return [

    /*
    |--------------------------------------------------------------------------
    | Telescope Domain
    |--------------------------------------------------------------------------
    |
    | This is the subdomain where Telescope will be accessible from. If the
    | setting is null, Telescope will reside under the same domain as the
    | application. Otherwise, this value will serve as the subdomain.
    |
    */

    'domain' => env('TELESCOPE_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | Telescope Path
    |--------------------------------------------------------------------------
    |
    | This is the URI path where Telescope will be accessible from. Feel free
    | to change this path to anything you like. Note that the URI will not
    | affect the paths of its internal API that aren't exposed to users.
    |
    */

    'path' => env('TELESCOPE_PATH', '{{ laravel_telescope_path | default("telescope") }}'),

    /*
    |--------------------------------------------------------------------------
    | Telescope Storage Driver
    |--------------------------------------------------------------------------
    |
    | This configuration options determines the storage driver that will
    | be used to store Telescope's data. In addition, you may set any
    | custom options as needed by the particular driver you choose.
    |
    */

    'driver' => env('TELESCOPE_DRIVER', '{{ laravel_telescope_storage_driver | default("database") }}'),

    'storage' => [
        'database' => [
            'connection' => env('DB_CONNECTION', 'mysql'),
            'chunk' => 1000,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Telescope Master Switch
    |--------------------------------------------------------------------------
    |
    | This option may be used to disable all Telescope watchers regardless
    | of their individual configuration, which simply provides a single
    | and convenient way to enable or disable Telescope data storage.
    |
    */

    'enabled' => env('TELESCOPE_ENABLED', {{ laravel_telescope_enabled | default('true') | lower }}),

    /*
    |--------------------------------------------------------------------------
    | Telescope Route Middleware
    |--------------------------------------------------------------------------
    |
    | These middleware will be assigned to every Telescope route, giving you
    | the chance to add your own middleware to this list or change any of
    | the existing middleware. Or, you can simply stick with this list.
    |
    */

    'middleware' => [
        {{ laravel_telescope_middleware | default("'web', 'auth'") }}
    ],

    /*
    |--------------------------------------------------------------------------
    | Allowed / Ignored Paths & Commands
    |--------------------------------------------------------------------------
    |
    | The following array lists the URI paths and Artisan commands that will
    | not be watched by Telescope. In addition to this list, some Laravel
    | commands, like migrations and queue commands, are always ignored.
    |
    */

    'only_paths' => [
        // 'api/*'
    ],

    'ignore_paths' => [
{% for path in laravel_telescope_ignored_paths | default(['nova-api*', 'telescope*', 'vendor/telescope*']) %}
        '{{ path }}',
{% endfor %}
    ],

    'ignore_commands' => [
{% for command in laravel_telescope_ignored_commands | default(['migrate*', 'queue:*', 'telescope:*']) %}
        '{{ command }}',
{% endfor %}
    ],

    /*
    |--------------------------------------------------------------------------
    | Telescope Watchers
    |--------------------------------------------------------------------------
    |
    | The following array lists the "watchers" that will be registered with
    | Telescope. The watchers gather application information when a request
    | is handled. Feel free to customize this list based on your needs.
    |
    */

    'watchers' => [
        Watchers\BatchWatcher::class => {{ laravel_telescope_watchers.BatchWatcher | default(true) | lower }},

        Watchers\CacheWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.CacheWatcher | default(true) | lower }},
            'hidden' => [
{% for param in laravel_telescope_cache_hidden_parameters | default([]) %}
                '{{ param }}',
{% endfor %}
            ],
        ],

        Watchers\CommandWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.CommandWatcher | default(true) | lower }},
            'ignore' => [
{% for command in laravel_telescope_ignored_commands | default(['migrate*', 'queue:*', 'telescope:*']) %}
                '{{ command }}',
{% endfor %}
            ],
        ],

        Watchers\DumpWatcher::class => {{ laravel_telescope_watchers.DumpWatcher | default(true) | lower }},
        Watchers\EventWatcher::class => {{ laravel_telescope_watchers.EventWatcher | default(true) | lower }},
        Watchers\ExceptionWatcher::class => {{ laravel_telescope_watchers.ExceptionWatcher | default(true) | lower }},

        Watchers\JobWatcher::class => {{ laravel_telescope_watchers.JobWatcher | default(true) | lower }},

        Watchers\LogWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.LogWatcher | default(true) | lower }},
            'level' => 'error',
        ],

        Watchers\MailWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.MailWatcher | default(true) | lower }},
            'capture_content' => {{ laravel_telescope_mail_capture_content | default(true) | lower }},
        ],

        Watchers\ModelWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.ModelWatcher | default(true) | lower }},
            'hydrations' => true,
        ],

        Watchers\NotificationWatcher::class => {{ laravel_telescope_watchers.NotificationWatcher | default(true) | lower }},

        Watchers\QueryWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.QueryWatcher | default(true) | lower }},
            'ignore_packages' => {{ laravel_telescope_query_ignore_packages | default(true) | lower }},
            'slow' => {{ laravel_telescope_query_slow_threshold | default(100) }},
        ],

        Watchers\RedisWatcher::class => {{ laravel_telescope_watchers.RedisWatcher | default(true) | lower }},

        Watchers\RequestWatcher::class => [
            'enabled' => {{ laravel_telescope_watchers.RequestWatcher | default(true) | lower }},
            'size_limit' => {{ laravel_telescope_request_size_limit | default(64) }},
        ],

        Watchers\ScheduleWatcher::class => {{ laravel_telescope_watchers.ScheduleWatcher | default(true) | lower }},
        Watchers\ViewWatcher::class => {{ laravel_telescope_watchers.ViewWatcher | default(true) | lower }},
    ],

    /*
    |--------------------------------------------------------------------------
    | Telescope Avatar Provider
    |--------------------------------------------------------------------------
    |
    | This configuration option determines the avatar provider that will be
    | used to retrieve avatars for entries. You may choose from one of the
    | providers listed below or create your own custom avatar provider.
    |
    */

    'avatar' => {{ laravel_telescope_avatar_provider | default('null') }},

];