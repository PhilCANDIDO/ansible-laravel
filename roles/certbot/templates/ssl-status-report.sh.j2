#!/bin/bash
# SSL Certificate Status Report
# Generated by Ansible - DO NOT EDIT MANUALLY

set -euo pipefail

DOMAIN="{{ certbot_primary_domain }}"
CERT_PATH="{{ certbot_fullchain_path }}"
PRIVATE_KEY_PATH="{{ certbot_private_key_path }}"

echo "SSL Certificate Status Report for ${DOMAIN}"
echo "=============================================="
echo "Generated: $(date)"
echo "Server: $(hostname)"
echo ""

# Check certificate file
if [[ -f "${CERT_PATH}" ]]; then
    echo "‚úÖ Certificate file exists: ${CERT_PATH}"
    
    # Certificate details
    echo ""
    echo "Certificate Details:"
    echo "-------------------"
    openssl x509 -in "${CERT_PATH}" -noout -subject -issuer -dates
    
    # Subject Alternative Names
    echo ""
    echo "Subject Alternative Names:"
    echo "-------------------------"
    openssl x509 -in "${CERT_PATH}" -noout -text | grep -A1 "Subject Alternative Name" | tail -1 || echo "None"
    
    # Certificate chain validation
    echo ""
    echo "Certificate Chain Validation:"
    echo "----------------------------"
    if openssl verify -CAfile "${CERT_PATH}" "${CERT_PATH}" &>/dev/null; then
        echo "‚úÖ Certificate chain is valid"
    else
        echo "‚ùå Certificate chain validation failed"
    fi
    
    # Expiry check
    echo ""
    echo "Expiry Information:"
    echo "------------------"
    EXPIRY_DATE=$(openssl x509 -enddate -noout -in "${CERT_PATH}" | cut -d= -f2)
    EXPIRY_EPOCH=$(date -d "${EXPIRY_DATE}" +%s)
    CURRENT_EPOCH=$(date +%s)
    DAYS_UNTIL_EXPIRY=$(( (EXPIRY_EPOCH - CURRENT_EPOCH) / 86400 ))
    
    if [[ ${DAYS_UNTIL_EXPIRY} -gt 30 ]]; then
        echo "‚úÖ Certificate expires in ${DAYS_UNTIL_EXPIRY} days"
    elif [[ ${DAYS_UNTIL_EXPIRY} -gt 7 ]]; then
        echo "‚ö†Ô∏è  Certificate expires in ${DAYS_UNTIL_EXPIRY} days (warning)"
    elif [[ ${DAYS_UNTIL_EXPIRY} -gt 0 ]]; then
        echo "üö® Certificate expires in ${DAYS_UNTIL_EXPIRY} days (critical)"
    else
        echo "‚ùå Certificate has expired ${DAYS_UNTIL_EXPIRY#-} days ago"
    fi
    
else
    echo "‚ùå Certificate file not found: ${CERT_PATH}"
fi

# Check private key
echo ""
echo "Private Key Status:"
echo "------------------"
if [[ -f "${PRIVATE_KEY_PATH}" ]]; then
    echo "‚úÖ Private key exists: ${PRIVATE_KEY_PATH}"
    
    # Check key permissions
    KEY_PERMS=$(stat -c "%a" "${PRIVATE_KEY_PATH}")
    if [[ "${KEY_PERMS}" == "600" ]] || [[ "${KEY_PERMS}" == "640" ]]; then
        echo "‚úÖ Private key permissions are secure (${KEY_PERMS})"
    else
        echo "‚ö†Ô∏è  Private key permissions may be too open (${KEY_PERMS})"
    fi
else
    echo "‚ùå Private key not found: ${PRIVATE_KEY_PATH}"
fi

# Web server configuration check
echo ""
echo "Web Server Configuration:"
echo "------------------------"
WEBSERVER="{{ webserver_type | default('nginx') }}"
if systemctl is-active --quiet "${WEBSERVER}"; then
    echo "‚úÖ ${WEBSERVER} is running"
    
    # Test HTTPS connection
    if curl -sSf -I "https://${DOMAIN}" &>/dev/null; then
        echo "‚úÖ HTTPS connection to ${DOMAIN} successful"
    else
        echo "‚ùå HTTPS connection to ${DOMAIN} failed"
    fi
    
    # Test HTTP redirect
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "http://${DOMAIN}" || echo "000")
    if [[ "${HTTP_STATUS}" == "301" ]] || [[ "${HTTP_STATUS}" == "302" ]]; then
        echo "‚úÖ HTTP to HTTPS redirect working (${HTTP_STATUS})"
    else
        echo "‚ö†Ô∏è  HTTP redirect may not be working (${HTTP_STATUS})"
    fi
else
    echo "‚ùå ${WEBSERVER} is not running"
fi

# Renewal configuration
echo ""
echo "Renewal Configuration:"
echo "---------------------"
RENEWAL_CONFIG="{{ certbot_config_dir }}/renewal/${DOMAIN}.conf"
if [[ -f "${RENEWAL_CONFIG}" ]]; then
    echo "‚úÖ Renewal configuration exists: ${RENEWAL_CONFIG}"
else
    echo "‚ùå Renewal configuration not found: ${RENEWAL_CONFIG}"
fi

# Cron job check
echo ""
echo "Automatic Renewal:"
echo "-----------------"
if crontab -l 2>/dev/null | grep -q "certbot"; then
    echo "‚úÖ Certbot renewal cron job configured"
    echo "Schedule: $(crontab -l 2>/dev/null | grep certbot | head -1)"
elif systemctl is-enabled --quiet certbot-renew.timer 2>/dev/null; then
    echo "‚úÖ Certbot renewal systemd timer enabled"
    echo "Next run: $(systemctl list-timers --no-pager | grep certbot-renew || echo 'Unknown')"
else
    echo "‚ö†Ô∏è  No automatic renewal configured"
fi

echo ""
echo "Report completed."