#!/bin/bash
# Nagios-compatible SSL certificate check
# Generated by Ansible - DO NOT EDIT MANUALLY

set -euo pipefail

DOMAIN="{{ certbot_primary_domain }}"
CERT_PATH="{{ certbot_fullchain_path }}"
WARNING_DAYS=30
CRITICAL_DAYS=7

# Usage function
usage() {
    echo "Usage: $0 [-w warning_days] [-c critical_days] [-d domain] [-f cert_file]"
    echo "  -w: Warning threshold in days (default: 30)"
    echo "  -c: Critical threshold in days (default: 7)"
    echo "  -d: Domain name (default: {{ certbot_primary_domain }})"
    echo "  -f: Certificate file path (default: {{ certbot_fullchain_path }})"
    exit 3
}

# Parse command line arguments
while getopts "w:c:d:f:h" opt; do
    case ${opt} in
        w) WARNING_DAYS=${OPTARG} ;;
        c) CRITICAL_DAYS=${OPTARG} ;;
        d) DOMAIN=${OPTARG} ;;
        f) CERT_PATH=${OPTARG} ;;
        h) usage ;;
        *) usage ;;
    esac
done

# Check if certificate exists
if [[ ! -f "${CERT_PATH}" ]]; then
    echo "CRITICAL - Certificate file not found: ${CERT_PATH}"
    exit 2
fi

# Get certificate information
EXPIRY_DATE=$(openssl x509 -enddate -noout -in "${CERT_PATH}" | cut -d= -f2)
EXPIRY_EPOCH=$(date -d "${EXPIRY_DATE}" +%s 2>/dev/null)
CURRENT_EPOCH=$(date +%s)

if [[ -z "${EXPIRY_EPOCH}" ]]; then
    echo "CRITICAL - Unable to parse certificate expiry date"
    exit 2
fi

DAYS_UNTIL_EXPIRY=$(( (EXPIRY_EPOCH - CURRENT_EPOCH) / 86400 ))

# Check certificate validity
if [[ ${DAYS_UNTIL_EXPIRY} -lt 0 ]]; then
    echo "CRITICAL - Certificate for ${DOMAIN} has expired ${DAYS_UNTIL_EXPIRY#-} days ago"
    exit 2
elif [[ ${DAYS_UNTIL_EXPIRY} -le ${CRITICAL_DAYS} ]]; then
    echo "CRITICAL - Certificate for ${DOMAIN} expires in ${DAYS_UNTIL_EXPIRY} days"
    exit 2
elif [[ ${DAYS_UNTIL_EXPIRY} -le ${WARNING_DAYS} ]]; then
    echo "WARNING - Certificate for ${DOMAIN} expires in ${DAYS_UNTIL_EXPIRY} days"
    exit 1
else
    echo "OK - Certificate for ${DOMAIN} is valid for ${DAYS_UNTIL_EXPIRY} more days"
    exit 0
fi